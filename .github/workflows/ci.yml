
# Solution contournement : Nettoyage via PR automatique

name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  quality:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write

    permissions:
      contents: read
      pull-requests: write


    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mbstring, xml, ctype, iconv, intl, pdo_sqlite, mysql
          coverage: xdebug
          tools: composer

      - name: Cache Composer packages
        uses: actions/cache@v3
        with:
          path: ~/.composer/cache/files
          key: composer-${{ hashFiles('composer.lock') }}
          restore-keys: composer-

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress --no-interaction --ignore-platform-reqs

      - name: Preview smart cleaning (dry-run)
        run: |
          echo "📋 Aperçu du nettoyage intelligent..."
          php scripts/clean-code.php --test

      - name: Run PHP CS Fixer
        run: composer cs-check

      - name: Run PHPStan
        run: composer phpstan -vvv

      - name: Run PHPUnit tests
        run: php bin/phpunit --coverage-text


  # 🤖 Créer une PR automatique de nettoyage
  create-cleaning-pr:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    permissions:
      contents: write
      pull-requests: write
    
    steps:
      - name: Checkout main
        uses: actions/checkout@v4
        with:
          ref: main
          token: ${{ secrets.PORTFOLIO_TOKEN }}
          fetch-depth: 0

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mbstring, xml

      - name: Configure Git
        run: |
          git config --local user.email "bot@portfolio.dev"
          git config --local user.name "Portfolio Cleaner Bot"

      - name: Create cleaning branch
        run: |
          timestamp=$(date +%Y%m%d-%H%M%S)
          git checkout -b "auto-clean-$timestamp"
          echo "BRANCH_NAME=auto-clean-$timestamp" >> $GITHUB_ENV

      - name: Apply smart cleaning
        run: |
          echo "🧹 Nettoyage du code..."
          php scripts/clean-code.php --apply

      - name: Check and commit changes
        id: check_changes
        run: |
          if [[ -n $(git status --porcelain) ]]; then
            echo "changes=true" >> $GITHUB_OUTPUT
            
            echo "📊 Fichiers modifiés :"
            git status --porcelain
            
            git add -A
            git commit -m "🧹 [Auto-Clean]: Code nettoyé pour la production

            📋 Nettoyage automatique :
            - Suppression des commentaires TODO, DEBUG, INFO
            - Nettoyage des console.log de debug
            - Optimisation pour la production
            
            🤖 Généré automatiquement par GitHub Actions"
            
            git push origin "$BRANCH_NAME"
          else
            echo "changes=false" >> $GITHUB_OUTPUT
            echo "✅ Code déjà propre"
          fi

      # 🔄 Créer la PR automatique
      - name: Create Pull Request
        if: steps.check_changes.outputs.changes == 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.PORTFOLIO_TOKEN }}
        run: |
          gh pr create \
            --title "🧹 [Auto-Clean]: Nettoyage automatique du code de production" \
            --body "## 🤖 Nettoyage automatique

          Cette PR a été créée automatiquement pour nettoyer le code de production.

          ### 📋 Changements appliqués :
          - ✅ Suppression des commentaires TODO, DEBUG, INFO
          - ✅ Nettoyage des console.log de debug  
          - ✅ Optimisation pour la production

          ### 🛡️ Sécurité :
          - ✅ Code critique préservé
          - ✅ Docblocks conservés
          - ✅ Attributs PHP 8 intacts

          ### ℹ️ Instructions :
          1. Vérifiez les changements
          2. Mergez cette PR pour appliquer le nettoyage
          3. La branche dev reste intacte avec tous vos commentaires

          ---
          🤖 **Généré automatiquement par GitHub Actions**" \
            --head "$BRANCH_NAME" \
            --base main \
            --label "automated-cleaning" \
            --label "production"

      - name: Summary
        run: |
          if [[ "${{ steps.check_changes.outputs.changes }}" == "true" ]]; then
            echo "✅ PR de nettoyage créée automatiquement"
            echo "👀 Vérifiez et mergez la PR pour appliquer les changements"
          else
            echo "✅ Code déjà propre - aucune action nécessaire"
          fi

